{
  "begin": {
    "prefix": "begin",
    "body": "begin\n\t$1\nrescue ${2:ExceptionName}\n\t$3\nend",
    "description": "begin … rescue … end",
    "scope": "source.ruby"
  },
  "case": {
    "prefix": "case",
    "body": "case ${1:object}\nwhen ${2:condition}\n\t$0\nend",
    "description": "case … end",
    "scope": "source.ruby"
  },
  "class": {
    "prefix": "class",
    "body": "class ${1:ClassName}\n\t$0\nend",
    "description": "class .. end",
    "scope": "source.ruby"
  },
  "def": {
    "prefix": "def",
    "body": "def ${1:method_name}\n\t$0\nend",
    "description": "def … end",
    "scope": "source.ruby"
  },
  "defi": {
    "prefix": "defi",
    "body": "def initialize${1:(${2:argument})}\n\t@${2:argument} = ${2:argument}$0\nend",
    "description": "def initialize .. end",
    "scope": "source.ruby"
  },
  "do": {
    "prefix": "do",
    "body": "do\n\t$0\nend",
    "description": "Insert do … end",
    "scope": "source.ruby"
  },
  "elsif": {
    "prefix": "elsif",
    "body": "elsif ${1:condition}\n\t$0",
    "description": "elsif ...",
    "scope": "source.ruby"
  },
  "if": {
    "prefix": "if",
    "body": "if ${1:condition}\n\t$0\nend",
    "description": "if … end",
    "scope": "source.ruby"
  },
  "ife": {
    "prefix": "ife",
    "body": "if ${1:condition}\n\t$2\nelse\n\t$3\nend",
    "description": "if … else … end",
    "scope": "source.ruby"
  },
  "map": {
    "prefix": "map",
    "body": "map { |${1:e}| $0 }",
    "description": "map { |e| .. }",
    "scope": "source.ruby"
  },
  "module": {
    "prefix": "module",
    "body": "module ${1:ModuleName}\n\t$0\nend",
    "description": "module .. end",
    "scope": "source.ruby"
  },
  "r": {
    "prefix": "r",
    "body": "attr_reader :${0:attr_names}",
    "description": "attr_reader ..",
    "scope": "source.ruby"
  },
  "req": {
    "prefix": "req",
    "body": "require '$0'",
    "description": "require '..'",
    "scope": "source.ruby"
  },
  "rw": {
    "prefix": "rw",
    "body": "attr_accessor :${0:attr_names}",
    "description": "attr_accessor ..",
    "scope": "source.ruby"
  },
  "unless": {
    "prefix": "unless",
    "body": "unless ${1:condition}\n\t$0\nend",
    "description": "unless … end",
    "scope": "source.ruby"
  },
  "until": {
    "prefix": "until",
    "body": "until ${1:condition}\n\t$0\nend",
    "description": "until ... end",
    "scope": "source.ruby"
  },
  "w": {
    "prefix": "w",
    "body": "attr_writer :${0:attr_names}",
    "description": "attr_writer ..",
    "scope": "source.ruby"
  },
  "while": {
    "prefix": "while",
    "body": "while ${1:condition}\n\t$0\nend",
    "description": "while ... end",
    "scope": "source.ruby"
  }
}
