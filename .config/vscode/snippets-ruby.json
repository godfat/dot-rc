{
  "ata": {
    "prefix": "ata",
    "body": "attr_accessor :${0:attr_names}",
    "description": "attr_accessor …",
    "scope": "source.ruby"
  },
  "atr": {
    "prefix": "atr",
    "body": "attr_reader :${0:attr_names}",
    "description": "attr_reader …",
    "scope": "source.ruby"
  },
  "atw": {
    "prefix": "atw",
    "body": "attr_writer :${0:attr_names}",
    "description": "attr_writer …",
    "scope": "source.ruby"
  },
  "cas": {
    "prefix": "cas",
    "body": "case ${1:expression}\nwhen ${2:condition}\n\t$0\nend",
    "description": "case … end",
    "scope": "source.ruby"
  },
  "cla": {
    "prefix": "cla",
    "body": "class ${1:ClassName}\n\t$0\nend",
    "description": "class … end",
    "scope": "source.ruby"
  },
  "def": {
    "prefix": "def",
    "body": "def ${1:method_name}\n\t$0\nend",
    "description": "def … end",
    "scope": "source.ruby"
  },
  "defi": {
    "prefix": "defi",
    "body": "def initialize${1:}\n\t$0\nend",
    "description": "def initialize … end",
    "scope": "source.ruby"
  },
  "do": {
    "prefix": "do",
    "body": "do |${1:}|\n\t$0\nend",
    "description": "Insert do … end",
    "scope": "source.ruby"
  },
  "if": {
    "prefix": "if",
    "body": "if ${1:condition}\n\t$0\nend",
    "description": "if … end",
    "scope": "source.ruby"
  },
  "inj": {
    "prefix": "inj",
    "body": "inject(${1:}) do |result, ${2:element}|\n\t$0\nend",
    "description": "inject … end",
    "scope": "source.ruby"
  },
  "map": {
    "prefix": "map",
    "body": "map do |${1:}|\n\t$0\nend",
    "description": "map … end",
    "scope": "source.ruby"
  },
  "mod": {
    "prefix": "mod",
    "body": "module ${1:ModuleName}\n\t$0\nend",
    "description": "module … end",
    "scope": "source.ruby"
  },
  "req": {
    "prefix": "req",
    "body": "require '$0'",
    "description": "require '…'",
    "scope": "source.ruby"
  }
}
